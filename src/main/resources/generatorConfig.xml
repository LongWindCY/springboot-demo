<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE generatorConfiguration
        PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"
        "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd">

<!--运行 maven 任务，输入命令 mybatis-generator:generate -e 即可生成代码-->
<generatorConfiguration>
    <context id="mysql" targetRuntime="MyBatis3">
        <!-- 生成的Java文件的编码 -->
        <property name="javaFileEncoding" value="UTF-8"/>

        <commentGenerator>
            <property name="suppressDate" value="true"/>
            <property name="suppressAllComments" value="true"/>
        </commentGenerator>
        <!--jdbc 连接-->
        <jdbcConnection driverClass="com.mysql.cj.jdbc.Driver"
                        connectionURL="jdbc:mysql://localhost:3306/demo"
                        userId="root"
                        password="424926">
        </jdbcConnection>

        <!-- java类型处理器
        用于处理DB中的类型到Java中的类型，默认使用JavaTypeResolverDefaultImpl；
        注意一点，默认会先尝试使用Integer，Long，Short等来对应DECIMAL和 NUMERIC数据类型；
        -->
        <javaTypeResolver>
            <!--        <javaTypeResolver type="org.mybatis.generator.internal.types.JavaTypeResolverDefaultImpl">-->
            <!--
                true：使用BigDecimal对应DECIMAL和 NUMERIC数据类型
                false：默认,
                    scale>0;length>18：使用BigDecimal;
                    scale=0;length[10,18]：使用Long；
                    scale=0;length[5,9]：使用Integer；
                    scale=0;length<5：使用Short；
             -->
            <property name="forceBigDecimals" value="false"/>
        </javaTypeResolver>


        <!-- java模型创建器，是必须要的元素
           负责：1，key类（见context的defaultModelType）；2，java类；3，查询类
           targetPackage：生成的类要放的包，真实的包受enableSubPackages属性控制；
           targetProject：目标项目，指定一个存在的目录下，生成的内容会放到指定目录中，如果目录不存在，MBG不会自动建目录
        -->
        <javaModelGenerator targetPackage="com.example.demo.mh_entity" targetProject="src/main/java">
            <!-- 是否允许子包，即targetPackage.schemaName.tableName -->
            <property name="enableSubPackages" value="true"/>
            <!-- 是否对model添加 构造函数 -->
            <property name="constructorBased" value="true"/>
            <!-- 是否对类CHAR类型的列的数据进行trim操作 -->
            <property name="trimStrings" value="true"/>
            <!-- 建立的Model对象是否 不可改变  即生成的Model对象不会有 setter方法，只有构造方法 -->
            <property name="immutable" value="false"/>
        </javaModelGenerator>

        <!-- 生成SQL map的XML文件生成器，
             注意，在Mybatis3之后，我们可以使用mapper.xml文件+Mapper接口（或者不用mapper接口），
                 或者只使用Mapper接口+Annotation，
                 所以，如果 javaClientGenerator配置中配置了需要生成XML的话，这个元素就必须配置
             targetPackage/targetProject:同javaModelGenerator
          -->
        <sqlMapGenerator targetPackage="mapper" targetProject="src/main/resources">
            <!-- 在targetPackage的基础上，根据数据库的schema再生成一层package，最终生成的类放在这个package下，默认为false -->
            <property name="enableSubPackages" value="true"/>
        </sqlMapGenerator>

        <!-- 对于mybatis来说，即生成Mapper接口，注意，如果没有配置该元素，那么默认不会生成Mapper接口
             targetPackage/targetProject:同javaModelGenerator
             type：选择怎么生成mapper接口（在MyBatis3/MyBatis3Simple下）：
                 1，ANNOTATEDMAPPER：会生成使用Mapper接口+Annotation的方式创建（SQL生成在annotation中），不会生成对应的XML；
                 2，MIXEDMAPPER：使用混合配置，会生成Mapper接口，并适当添加合适的Annotation，但是XML会生成在XML中；
                 3，XMLMAPPER：会生成Mapper接口，接口完全依赖XML；
             注意，如果context是MyBatis3Simple：只支持ANNOTATEDMAPPER和XMLMAPPER
         -->
        <javaClientGenerator targetPackage="com.example.demo.mh_dao" type="XMLMAPPER"
                             targetProject="src/main/java">
            <!-- 在targetPackage的基础上，根据数据库的schema再生成一层package，最终生成的类放在这个package下，默认为false -->
            <property name="enableSubPackages" value="true"/>
        </javaClientGenerator>


        <!-- 选择一个table来生成相关文件，可以有一个或多个table，必须要有table元素
            tableName（必要）：要生成对象的表名；
            domainObjectName 给表对应的 model 起名字
            注意：大小写敏感问题。
         -->
        <!--        <table tableName="%">-->
        <!--            <generatedKey column="id" sqlStatement="Mysql" identity="true"/>-->
        <!--        </table>-->
        <!--        <table tableName="project_user" domainObjectName="User" />-->
        <!--        <table tableName="project_dept" domainObjectName="Dept" />-->
        <!--        <table tableName="project_employee" domainObjectName="Employee" />-->
        <!--        <table tableName="project_notice" domainObjectName="Notice" />-->

<!--                用户表-->
<!--                <table tableName="mh_user" domainObjectName="User" enableCountByExample="false"-->
<!--                       enableUpdateByExample="false" enableDeleteByExample="false"-->
<!--                       enableSelectByExample="false" selectByExampleQueryId="false"/>-->
<!--                管理员表-->
<!--                <table tableName="mh_ruleuser" domainObjectName="RuleUser" enableCountByExample="false"-->
<!--                       enableUpdateByExample="false" enableDeleteByExample="false"-->
<!--                       enableSelectByExample="false" selectByExampleQueryId="false"/>-->
<!--                用户信息表-->
<!--        <table tableName="mh_usermassage" domainObjectName="UserMassage" enableCountByExample="false"-->
<!--               enableUpdateByExample="false" enableDeleteByExample="false"-->
<!--               enableSelectByExample="false" selectByExampleQueryId="false"/>-->
<!--        导航栏-->
<!--                <table tableName="mh_navbar" domainObjectName="NavBar" enableCountByExample="false"-->
<!--                       enableUpdateByExample="false" enableDeleteByExample="false"-->
<!--                       enableSelectByExample="false" selectByExampleQueryId="false"/>-->
<!--        图片地址-->
<!--        <table tableName="mh_photolocation" domainObjectName="PhotoLocation" enableCountByExample="false"-->
<!--               enableUpdateByExample="false" enableDeleteByExample="false"-->
<!--               enableSelectByExample="false" selectByExampleQueryId="false"/>-->
<!--        首页图片信息-->
<!--        <table tableName="mh_homephoto" domainObjectName="HomePhoto" enableCountByExample="false"-->
<!--               enableUpdateByExample="false" enableDeleteByExample="false"-->
<!--               enableSelectByExample="false" selectByExampleQueryId="false"/>-->
<!--        服装分类-->
<!--        <table tableName="mh_classification" domainObjectName="Classification" enableCountByExample="false"-->
<!--               enableUpdateByExample="false" enableDeleteByExample="false"-->
<!--               enableSelectByExample="false" selectByExampleQueryId="false"/>-->
<!--        文章-->
<!--        <table tableName="mh_article" domainObjectName="Article" enableCountByExample="false"-->
<!--               enableUpdateByExample="false" enableDeleteByExample="false"-->
<!--               enableSelectByExample="false" selectByExampleQueryId="false"/>-->
<!--        文章类型-->
<!--        <table tableName="mh_articleclass" domainObjectName="ArticleClass" enableCountByExample="false"-->
<!--               enableUpdateByExample="false" enableDeleteByExample="false"-->
<!--               enableSelectByExample="false" selectByExampleQueryId="false"/>-->
<!--        订单-->
<!--        <table tableName="mh_order" domainObjectName="Order" enableCountByExample="false"-->
<!--               enableUpdateByExample="false" enableDeleteByExample="false"-->
<!--               enableSelectByExample="false" selectByExampleQueryId="false"/>-->
<!--        门店-->
<!--        <table tableName="mh_store" domainObjectName="Store" enableCountByExample="false"-->
<!--               enableUpdateByExample="false" enableDeleteByExample="false"-->
<!--               enableSelectByExample="false" selectByExampleQueryId="false"/>-->
<!---->



        <!--&lt;!&ndash;用来修改表中某个列的属性,一个table元素中可以有多个columnOverride元素哈.-->
        <!--property属性来指定列要生成的属性名称.-->
        <!--&ndash;&gt;-->
        <!--&lt;!&ndash;<columnOverride column="username" property="userName" />&ndash;&gt;-->
        <!--</table>-->

        <!--<table tableName="person" domainObjectName="Person"/>-->
        <!--<table tableName="department" domainObjectName="Depart"/>-->


    </context>
</generatorConfiguration>