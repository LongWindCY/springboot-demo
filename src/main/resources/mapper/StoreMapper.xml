<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.mh_dao.StoreMapper">
  <resultMap id="BaseResultMap" type="com.example.demo.mh_entity.Store">
    <constructor>
      <idArg column="id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="name" javaType="java.lang.String" jdbcType="CHAR" />
      <arg column="address" javaType="java.lang.String" jdbcType="CHAR" />
      <arg column="address_clear" javaType="java.lang.String" jdbcType="CHAR" />
      <arg column="introduction" javaType="java.lang.String" jdbcType="CHAR" />
      <arg column="img_location" javaType="java.lang.String" jdbcType="CHAR" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    id, name, address, address_clear, introduction, img_location
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from mh_store
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectAllStore" parameterType="com.example.demo.mh_entity.StoreSearchWord" resultMap="BaseResultMap">
    select *
    from mh_store
    where concat(name,address,address_clear) LIKE concat('%',#{keyword,jdbcType=CHAR},'%')
    LIMIT #{pageSize,jdbcType=INTEGER} OFFSET #{offset,jdbcType=INTEGER}
  </select>
  <select id="countAllStore" parameterType="com.example.demo.mh_entity.StoreSearchWord" resultType="int">
    select COUNT(*)
    from mh_store
    where concat(name,address,address_clear) LIKE concat('%',#{keyword,jdbcType=CHAR},'%')
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from mh_store
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.example.demo.mh_entity.Store">
    insert into mh_store (id, name, address, 
      address_clear, introduction, img_location
      )
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=CHAR}, #{address,jdbcType=CHAR}, 
      #{addressClear,jdbcType=CHAR}, #{introduction,jdbcType=CHAR}, #{imgLocation,jdbcType=CHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.example.demo.mh_entity.Store">
    insert into mh_store
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="addressClear != null">
        address_clear,
      </if>
      <if test="introduction != null">
        introduction,
      </if>
      <if test="imgLocation != null">
        img_location,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=CHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=CHAR},
      </if>
      <if test="addressClear != null">
        #{addressClear,jdbcType=CHAR},
      </if>
      <if test="introduction != null">
        #{introduction,jdbcType=CHAR},
      </if>
      <if test="imgLocation != null">
        #{imgLocation,jdbcType=CHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.demo.mh_entity.Store">
    update mh_store
    <set>
      <if test="name != null">
        name = #{name,jdbcType=CHAR},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=CHAR},
      </if>
      <if test="addressClear != null">
        address_clear = #{addressClear,jdbcType=CHAR},
      </if>
      <if test="introduction != null">
        introduction = #{introduction,jdbcType=CHAR},
      </if>
      <if test="imgLocation != null">
        img_location = #{imgLocation,jdbcType=CHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.demo.mh_entity.Store">
    update mh_store
    set name = #{name,jdbcType=CHAR},
      address = #{address,jdbcType=CHAR},
      address_clear = #{addressClear,jdbcType=CHAR},
      introduction = #{introduction,jdbcType=CHAR},
      img_location = #{imgLocation,jdbcType=CHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>